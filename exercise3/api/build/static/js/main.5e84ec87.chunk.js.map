{"version":3,"sources":["services/reminderService.js","components/Reminder.js","components/AddReminderForm.js","components/App.js","index.js"],"names":["REMINDERS_API_URL","axios","get","then","response","data","name","date","timestamp","Date","parse","reminderData","isNaN","toISOString","post","id","delete","status","catch","Reminder","reminder","deletionHandler","timestampString","toLocaleString","style","width","whiteSpace","color","className","onClick","AddReminderForm","submitHandler","nameChangeHandler","dateChangeHandler","nameValue","dateValue","onSubmit","value","onChange","type","colSpan","App","props","addReminder","e","preventDefault","state","reminders","some","newName","alert","reminderService","newDate","newReminder","setState","prevState","console","log","reason","onNameChange","target","onDateChange","onReminderDelete","window","confirm","wasSuccess","filter","this","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0OAEMA,EAAoB,iBAgCX,EA9BS,WACvB,OAAOC,IAAMC,IAAIF,GAAmBG,MAAK,SAACC,GACzC,OAAOA,EAASC,SA4BH,EAxBQ,SAACC,EAAMC,GAC7B,IAAMC,EAAYC,KAAKC,MAAMH,GAEvBI,EAAe,CACpBL,KAAMA,EACNE,WAHqBI,MAAMJ,GAAa,IAAIC,KAAS,IAAIA,KAAKD,IAGrCK,eAE1B,OAAOZ,IAAMa,KAAKd,EAAmBW,GAAcR,MAAK,SAACC,GACxD,OAAOA,EAASC,SAgBH,EAZY,SAACU,GAC3B,OAAOd,IACLe,OADK,UACKhB,EADL,YAC0Be,IAC/BZ,MAAK,SAACC,GACN,OAA2B,MAApBA,EAASa,QAAsC,MAApBb,EAASa,UAE3CC,OAAM,WACN,OAAO,M,OCTKC,EAlBE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBACvBb,EAAY,IAAIC,KAAKW,EAASZ,WAC9Bc,EAAe,UAAMd,EAAUe,kBACrC,OACC,+BACC,oBAAIC,MAAO,CAAEC,MAAO,MAAOC,WAAY,SAAUC,MAAO,QAAxD,SACC,4BAAIL,MAEL,6BAAKF,EAASd,OACd,6BACC,wBAAQsB,UAAU,aAAaC,QAAS,kBAAMR,EAAgBD,EAASL,KAAvE,0BCkBWe,EA5BS,SAAC,GAAmF,IAAjFC,EAAgF,EAAhFA,cAAeC,EAAiE,EAAjEA,kBAAmBC,EAA8C,EAA9CA,kBAAmBC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAC1F,OACC,sBAAMC,SAAUL,EAAhB,SACC,gCACC,kCACC,+BACC,uCACA,6BACC,uBAAOM,MAAOH,EAAWI,SAAUN,SAGrC,+BACC,4DACA,6BACC,uBAAOK,MAAOF,EAAWG,SAAUL,EAAmBM,KAAK,wBAG7D,6BACC,oBAAIC,QAAS,EAAb,SACC,wBAAQD,KAAK,SAAb,qCC6EQE,E,kDA5Fd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAePC,YAAc,SAACC,GACdA,EAAEC,iBACE,EAAKC,MAAMC,UAAUC,MAAK,SAAC5B,GAAD,OAAcA,EAASd,OAAS,EAAKwC,MAAMG,WACxEC,MAAM,6BAIPC,EACiB,EAAKL,MAAMG,QAAS,EAAKH,MAAMM,SAC9CjD,MAAK,SAACkD,GAEN,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC7BR,UAAU,GAAD,mBAAMQ,EAAUR,WAAhB,CAA2BM,IACpCJ,QAAS,GACTG,QAAS,OAEVI,QAAQC,IAAR,4BAAiCJ,EAAYtC,GAA7C,6BAEAG,OAAM,SAACwC,GACPF,QAAQC,IAAR,uCAA4CC,QAnC5B,EAuCnBC,aAAe,SAACf,GACf,EAAKU,SAAS,CACbL,QAASL,EAAEgB,OAAOvB,SAzCD,EA6CnBwB,aAAe,SAACjB,GACf,EAAKU,SAAS,CACbF,QAASR,EAAEgB,OAAOvB,SA/CD,EAmDnByB,iBAAmB,SAAC/C,GACfgD,OAAOC,QAAQ,sBAElBb,EAAmCpC,GAAIZ,MAAK,SAAC8D,GACxCA,GAEH,EAAKX,UAAS,SAACC,GAAD,MAAgB,CAC7BR,UAAWQ,EAAUR,UAAUmB,QAAO,SAAC9C,GAAD,OAAcA,EAASL,KAAOA,SAErEyC,QAAQC,IAAR,4BAAiC1C,EAAjC,2BAEAyC,QAAQC,IAAR,4BAAiC1C,EAAjC,8BA5DH,EAAK+B,MAAQ,CACZC,UAAW,GACXE,QAAS,GACTG,QAAS,IALQ,E,qDASnB,WAAqB,IAAD,OAEnBD,IAAkChD,MAAK,SAAC4C,GACvC,EAAKO,SAAS,CAAEP,mB,oBAwDlB,WAAU,IAAD,OACR,OACC,qCACC,uDACA,cAAC,EAAD,CACChB,cAAeoC,KAAKxB,YACpBX,kBAAmBmC,KAAKR,aACxB1B,kBAAmBkC,KAAKN,aACxB3B,UAAWiC,KAAKrB,MAAMG,QACtBd,UAAWgC,KAAKrB,MAAMM,UAEvB,8CACA,uBAAO5B,MAAO,CAAEC,MAAO,SAAvB,SACC,gCACE0C,KAAKrB,MAAMC,UAAUqB,KAAI,SAAChD,GAAD,OACzB,cAAC,EAAD,CAA4BA,SAAUA,EAAUC,gBAAiB,EAAKyC,kBAAvD1C,EAASL,kB,GApFbsD,IAAMC,W,MCAxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5e84ec87.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst REMINDERS_API_URL = \"/api/reminders\";\r\n\r\nconst getAllReminders = () => {\r\n\treturn axios.get(REMINDERS_API_URL).then((response) => {\r\n\t\treturn response.data;\r\n\t});\r\n};\r\n\r\nconst createReminder = (name, date) => {\r\n\tconst timestamp = Date.parse(date);\r\n\tconst timestampDate = isNaN(timestamp) ? new Date() : new Date(timestamp);\r\n\tconst reminderData = {\r\n\t\tname: name,\r\n\t\ttimestamp: timestampDate.toISOString()\r\n\t};\r\n\treturn axios.post(REMINDERS_API_URL, reminderData).then((response) => {\r\n\t\treturn response.data;\r\n\t});\r\n};\r\n\r\nconst deleteReminderById = (id) => {\r\n\treturn axios\r\n\t\t.delete(`${REMINDERS_API_URL}/${id}`)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.status === 200 || response.status === 204;\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\treturn false;\r\n\t\t});\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAllReminders, createReminder, deleteReminderById };\r\n","import React from \"react\";\r\n\r\nconst Reminder = ({ reminder, deletionHandler }) => {\r\n\tconst timestamp = new Date(reminder.timestamp);\r\n\tconst timestampString = `${timestamp.toLocaleString()}`;\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td style={{ width: \"1px\", whiteSpace: \"nowrap\", color: \"grey\" }}>\r\n\t\t\t\t<i>{timestampString}</i>\r\n\t\t\t</td>\r\n\t\t\t<td>{reminder.name}</td>\r\n\t\t\t<td>\r\n\t\t\t\t<button className=\"delete-btn\" onClick={() => deletionHandler(reminder.id)}>\r\n\t\t\t\t\tPoista\r\n\t\t\t\t</button>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n\r\nexport default Reminder;\r\n","import React from \"react\";\r\n\r\nconst AddReminderForm = ({ submitHandler, nameChangeHandler, dateChangeHandler, nameValue, dateValue }) => {\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Aihe:</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input value={nameValue} onChange={nameChangeHandler} />\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Päivämäärä:</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<input value={dateValue} onChange={dateChangeHandler} type=\"datetime-local\" />\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td colSpan={2}>\r\n\t\t\t\t\t\t\t<button type=\"submit\">Lisää</button>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddReminderForm;\r\n","import React from \"react\";\nimport reminderService from \"../services/reminderService\";\nimport Reminder from \"./Reminder\";\nimport AddReminderForm from \"./AddReminderForm\";\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\treminders: [],\n\t\t\tnewName: \"\",\n\t\t\tnewDate: \"\"\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t// Get and set initial reminders\n\t\treminderService.getAllReminders().then((reminders) => {\n\t\t\tthis.setState({ reminders });\n\t\t});\n\t}\n\n\taddReminder = (e) => {\n\t\te.preventDefault();\n\t\tif (this.state.reminders.some((reminder) => reminder.name === this.state.newName)) {\n\t\t\talert(\"Tää on olemassa jo!\");\n\t\t\treturn;\n\t\t}\n\t\t// Post to server\n\t\treminderService\n\t\t\t.createReminder(this.state.newName, this.state.newDate)\n\t\t\t.then((newReminder) => {\n\t\t\t\t// Update state\n\t\t\t\tthis.setState((prevState) => ({\n\t\t\t\t\treminders: [...prevState.reminders, newReminder],\n\t\t\t\t\tnewName: \"\",\n\t\t\t\t\tnewDate: \"\"\n\t\t\t\t}));\n\t\t\t\tconsole.log(`Reminder with id: ${newReminder.id} successfully created`);\n\t\t\t})\n\t\t\t.catch((reason) => {\n\t\t\t\tconsole.log(`Could not create a reminder: ${reason}`);\n\t\t\t});\n\t};\n\n\tonNameChange = (e) => {\n\t\tthis.setState({\n\t\t\tnewName: e.target.value\n\t\t});\n\t};\n\n\tonDateChange = (e) => {\n\t\tthis.setState({\n\t\t\tnewDate: e.target.value\n\t\t});\n\t};\n\n\tonReminderDelete = (id) => {\n\t\tif (window.confirm(\"Ootko ihan varma?\")) {\n\t\t\t// Delete from server\n\t\t\treminderService.deleteReminderById(id).then((wasSuccess) => {\n\t\t\t\tif (wasSuccess) {\n\t\t\t\t\t// Delete from state\n\t\t\t\t\tthis.setState((prevState) => ({\n\t\t\t\t\t\treminders: prevState.reminders.filter((reminder) => reminder.id !== id)\n\t\t\t\t\t}));\n\t\t\t\t\tconsole.log(`Reminder with id: ${id} successfully deleted`);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(`Reminder with id: ${id} could not be deleted`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h2>Lisää muistutus</h2>\n\t\t\t\t<AddReminderForm\n\t\t\t\t\tsubmitHandler={this.addReminder}\n\t\t\t\t\tnameChangeHandler={this.onNameChange}\n\t\t\t\t\tdateChangeHandler={this.onDateChange}\n\t\t\t\t\tnameValue={this.state.newName}\n\t\t\t\t\tdateValue={this.state.newDate}\n\t\t\t\t/>\n\t\t\t\t<h2>Muistutukset</h2>\n\t\t\t\t<table style={{ width: \"500px\" }}>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{this.state.reminders.map((reminder) => (\n\t\t\t\t\t\t\t<Reminder key={reminder.id} reminder={reminder} deletionHandler={this.onReminderDelete} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}